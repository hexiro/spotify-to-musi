[tool.poetry]
name = "spotify-to-musi"
description = "Transfer Spotify playlists to Musi."
version = "2.0.1"
readme = "README.md"
license = "MIT"
authors = ["Hexiro <mail@hexiro.me>"]
repository = "https://github.com/hexiro/spotify-to-musi"
keywords = ["spotify", "music", "musi", "transfer", "cli"]
classifiers = [
    "Natural Language :: English",
    "Environment :: Console",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries ",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.9"
rich = ">=12.6.0 <15.0.0"
rich-click = "^1.6.1"
aiofiles = "^23.1.0"
httpx = ">=0.23.0 <=0.25.0"
pydantic = "^2.0.2"
pyfy = "^2.2.0"
sanic = "^23.3.0"
async-cache = "^1.1.1"
typing-extensions = {version = "^4.7.1", python = "<3.11"}
uvloop = {version = "^0.17.0", platform = "linux"}

[tool.poetry.scripts]
spotify-to-musi = "spotify_to_musi.__main__:cli"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/hexiro/spotify-to-musi/issues"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-asyncio = "^0.21.0"
mypy = "^1.2.0"
ruff = "^0.0.261"
black = "^23.3.0"
isort = "^5.12.0"
types-aiofiles = "^23.1.0.1"
pre-commit = "^3.2.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
target-version = ["py38"]

[tool.ruff]
select = ["ANN", "TCH", "N", "S", "B", "A", "C4", "EM", "INP", "PIE", "SIM", "ERA", "TRY", "TID", "RUF", "F"]
ignore = [
    "E501",    # let black handle line length
    "ANN401",  # if everything is going to be typed, some things have to be any,
    "ANN102",  # ignoring type annotations for cls and self
    "A003",    # attributes with the same name as builtins is okay
    "EM101",   # I personally think it's okay to use a string literal in this case.
]  

[tool.ruff.per-file-ignores]
"tests/*.py" = ["S101"]   # allow using assert in tests

[tool.mypy]
ignore_missing_imports = true
disable_error_code = "call-arg"

[tool.isort]
profile = "black"